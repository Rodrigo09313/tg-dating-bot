// src/bot/menu.ts
// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ /help. –í—Å–µ–≥–¥–∞ –æ—Ç–¥–∞—ë–º –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—É—Å—Ç—ã—Ö sendMessage.

import TelegramBot from "node-telegram-bot-api";
import { DbUser, sendScreen, setState } from "./helpers";

export async function showMainMenu(bot: TelegramBot, chatId: number, user: DbUser) {
  await setState(chatId, "idle");
  const text = "‚ú® –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:";
  const keyboard = [
    [{ text: "üé≤ –ß–∞—Ç —Ä—É–ª–µ—Ç–∫–∞", callback_data: "rl:find" }],
    [{ text: "üíû –ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞", callback_data: "brw:start" }],
    [{ text: "üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data: "prf:open" }],
    [{ text: "‚ùì –ü–æ–º–æ—â—å", callback_data: "sys:help" }]
  ];
  await sendScreen(bot, chatId, user, {
    text,
    keyboard,
    parse_mode: "HTML",
    disable_web_page_preview: true,
  });
}

export async function showHelp(bot: TelegramBot, chatId: number, user: DbUser) {
  const text = [
    "üí´ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>",
    "",
    "üìã <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:</b>",
    "–ó–∞–ø–æ–ª–Ω–∏ –≤–æ–∑—Ä–∞—Å—Ç, –ø–æ–ª, –≥–æ—Ä–æ–¥ –∏ –¥–æ–±–∞–≤—å —Ñ–æ—Ç–æ",
    "",
    "üë• <b>–ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞:</b>", 
    "–°–º–æ—Ç—Ä–∏ –∞–Ω–∫–µ—Ç—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π –∑–∞–ø—Ä–æ—Å—ã",
    "",
    "üé≤ <b>–ß–∞—Ç-—Ä—É–ª–µ—Ç–∫–∞:</b>",
    "–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç —Å –±–ª–∏–∂–∞–π—à–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
    "",
    "üì® <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>",
    "–£–ø—Ä–∞–≤–ª—è–π –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏"
  ].join("\n");
  
  const keyboard = [
    [{ text: "üé≤ –ß–∞—Ç —Ä—É–ª–µ—Ç–∫–∞", callback_data: "rl:find" }],
    [{ text: "üíû –ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞", callback_data: "brw:start" }],
    [{ text: "üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data: "prf:open" }],
    [{ text: "üè† –ú–µ–Ω—é", callback_data: "sys:menu" }]
  ];
  
  await sendScreen(bot, chatId, user, {
    text,
    keyboard,
    parse_mode: "HTML",
    disable_web_page_preview: true,
  });
}